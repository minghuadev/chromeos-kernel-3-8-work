/*
 * Google Spring board device tree source
 *
 * Copyright (c) 2013 Google, Inc
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
*/

/dts-v1/;
#include "exynos5250.dtsi"
#include "cros5250-common.dtsi"

/ {
	model = "Google Spring";
	compatible = "google,spring", "samsung,exynos5250";

	aliases {
		i2c20 = &i2c_20;
	};

	pinctrl@11400000 {
		sd1_clk: sd1-clk {
			samsung,pin-drv = <0>;
		};

		sd1_cmd: sd1-cmd {
			samsung,pin-pud = <3>;
			samsung,pin-drv = <0>;
		};

		sd1_bus4: sd1-bus-width4 {
			samsung,pin-drv = <0>;
		};

		anx7808_irq0: anx7808-irq0 {
			samsung,pins = "gpx0-7";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		atmel_irq: atmel-irq {
			samsung,pins = "gpx1-2";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		dp_hpd: dp-hpd {
			samsung,pins = "gpc3-0";
			samsung,pin-function = <0>;
			samsung,pin-pud = <3>;
			samsung,pin-drv = <0>;
		};

		ec_irq: ec-irq {
			samsung,pins = "gpx1-6";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		lid_irq: lid-irq {
			samsung,pins = "gpx3-5";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		s5m8767_ds: s5m8767-ds {
			samsung,pins = "gpx2-3", "gpx2-4", "gpx2-5";
			samsung,pin-function = <0>;
			samsung,pin-pud = <1>;
			samsung,pin-drv = <0>;
		};

		s5m8767_dvs: s5m8767-dvs {
			samsung,pins = "gpd1-0", "gpd1-1", "gpd1-2";
			samsung,pin-function = <0>;
			samsung,pin-pud = <1>;
			samsung,pin-drv = <0>;
		};

		s5m8767_irq: s5m8767-irq {
			samsung,pins = "gpx3-2";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		ps8622_gpios: ps8622-gpios {
			samsung,pins = "gpc3-1", "gpc3-6";
			samsung,pin-function = <1>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		tps65090_irq: tps65090-irq {
			samsung,pins = "gpx2-6";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
	};

	pinctrl@13400000 {
		anx7808_gpios: anx7808-gpios {
			samsung,pins = "gpe0-6", "gpe0-7";
			samsung,pin-function = <1>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		anx7808_irq1: anx7808-irq1 {
			samsung,pins = "gpf0-0";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
	};

	gpio-keys {
		compatible = "gpio-keys";

		pinctrl-names = "default";
		pinctrl-0 = <&power_key_irq &lid_irq>;

		lid-switch {
			label = "Lid";
			gpios = <&gpx3 5 1>;
			linux,input-type = <5>; /* EV_SW */
			linux,code = <0>; /* SW_LID */
			debounce-interval = <1>;
			gpio-key,wakeup;
		};
	};

	adc@12D10000 {
		/* no NTC connected to the ADCs */
		status = "disabled";
	};

	dwmmc1@12210000 {
		/*
		 * The current best way to ensure that reset/enable and clocks
		 * are available before we try to probe the WiFi card is through
		 * a chain of regulators.
		 */
		vmmc-supply = <&wifi_en_regulator>;

		status = "okay";
		num-slots = <1>;
		supports-highspeed;
		broken-cd;
		keep-power-in-suspend;
		fifo-depth = <0x80>;
		card-detect-delay = <200>;
		clock-frequency = <400000000>;
		samsung,dw-mshc-ciu-div = <3>;
		samsung,dw-mshc-sdr-timing = <2 3>;
		samsung,dw-mshc-ddr-timing = <1 2>;
		/*
		 * Wifi is a SiP, so can keep drive strengths low
		 * to reduce EMI.
		 */
		pinctrl-names = "default";
		pinctrl-0 = <&sd1_clk &sd1_cmd &sd1_bus4>;
		slot@0 {
			reg = <0>;
			bus-width = <4>;
		};
	};

	dwmmc2@12220000 {
		/* MMC2 pins are used as GPIO for eDP bridge control */
		status = "disabled";
	};

	dwmmc3@12230000 {
		/*
		 * Nothing is connected on MMC3 port : disable it.
		 *
		 * We override the default configuration for this port which
		 * configures it for SDIO in cros5250-common.dtsi.
		 */
		status = "disabled";
	};

	i2c@12C60000 {
		max77686@09 {
			status = "disabled";
		};

		s5m8767_pmic@66 {
			compatible = "samsung,s5m8767-pmic";
			interrupt-parent = <&gpx3>;
			interrupts = <2 0>;
			pinctrl-names = "default";
			pinctrl-0 = <&s5m8767_irq &s5m8767_dvs &s5m8767_ds>;
			wakeup-source;
			reg = <0x66>;

			s5m-core,enable-low-jitter;
			s5m-core,device_type = <2>;

			s5m8767,pmic-buck-dvs-gpios = <&gpd1 0 1>, /* DVS1 */
						      <&gpd1 1 1>, /* DVS2 */
						      <&gpd1 2 1>; /* DVS3 */

			s5m8767,pmic-buck-ds-gpios = <&gpx2 3 1>, /* SET1 */
						     <&gpx2 4 1>, /* SET2 */
						     <&gpx2 5 1>; /* SET3 */


			/*
			 * the following arrays of DVS voltages are not used
			 * since we are not using GPIOs to control PMIC bucks
			 * but they must be defined to please the driver.
			 */
			s5m8767,pmic-buck2-dvs-voltage = <1350000>, <1300000>,
							 <1250000>, <1200000>,
							 <1150000>, <1100000>,
							 <1000000>, <950000>;

			s5m8767,pmic-buck3-dvs-voltage = <1100000>, <1100000>,
							 <1100000>, <1100000>,
							 <1000000>, <1000000>,
							 <1000000>, <1000000>;

			s5m8767,pmic-buck4-dvs-voltage = <1200000>, <1200000>,
							 <1200000>, <1200000>,
							 <1200000>, <1200000>,
							 <1200000>, <1200000>;

			regulators {
				s5m_ldo4_reg: LDO4 {
					regulator-name = "P1.0V_LDO_OUT4";
					regulator-min-microvolt = <1000000>;
					regulator-max-microvolt = <1000000>;
					regulator-always-on;
					/* Output OFF */
					op_mode = <0>;
				};
				s5m_ldo5_reg: LDO5 {
					regulator-name = "P1.0V_LDO_OUT5";
					regulator-min-microvolt = <1000000>;
					regulator-max-microvolt = <1000000>;
					regulator-always-on;
					/* Output OFF */
					op_mode = <0>;
				};
				s5m_ldo6_reg: LDO6 {
					regulator-name = "vdd_mydp";
					regulator-min-microvolt = <1000000>;
					regulator-max-microvolt = <1000000>;
					regulator-always-on;
					/* Output ON/OFF controlled by PWRREQ */
					op_mode = <1>;
				};
				s5m_ldo7_reg: LDO7 {
					regulator-name = "P1.1V_LDO_OUT7";
					regulator-min-microvolt = <1100000>;
					regulator-max-microvolt = <1100000>;
					regulator-always-on;
					/* Output ON/OFF controlled by PWRREQ */
					op_mode = <1>;
				};
				s5m_ldo8_reg: LDO8 {
					regulator-name = "P1.0V_LDO_OUT8";
					regulator-min-microvolt = <1000000>;
					regulator-max-microvolt = <1000000>;
					regulator-always-on;
					/* Output ON/OFF controlled by PWRREQ */
					op_mode = <1>;
				};
				s5m_ldo10_reg: LDO10 {
					regulator-name = "P1.8V_LDO_OUT10";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
					regulator-always-on;
					/* Output ON/OFF controlled by PWRREQ */
					op_mode = <1>;
				};
				s5m_ldo11_reg: LDO11 {
					regulator-name = "P1.8V_LDO_OUT11";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
					regulator-always-on;
					/* Output OFF */
					op_mode = <0>;
				};
				s5m_ldo12_reg: LDO12 {
					regulator-name = "P3.0V_LDO_OUT12";
					regulator-min-microvolt = <3000000>;
					regulator-max-microvolt = <3000000>;
					regulator-always-on;
					/* Output ON/OFF controlled by PWRREQ */
					op_mode = <1>;
				};
				s5m_ldo13_reg: LDO13 {
					regulator-name = "P1.8V_LDO_OUT13";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
					regulator-always-on;
					/* Output OFF */
					op_mode = <0>;
				};
				s5m_ldo14_reg: LDO14 {
					regulator-name = "P1.8V_LDO_OUT14";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
					regulator-always-on;
					/* Output ON/OFF controlled by PWRREQ */
					op_mode = <1>;
				};
				s5m_ldo15_reg: LDO15 {
					regulator-name = "P1.0V_LDO_OUT15";
					regulator-min-microvolt = <1000000>;
					regulator-max-microvolt = <1000000>;
					regulator-always-on;
					/* Output ON/OFF controlled by PWRREQ */
					op_mode = <1>;
				};
				s5m_ldo16_reg: LDO16 {
					regulator-name = "P1.8V_LDO_OUT16";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
					regulator-always-on;
					/* Output ON/OFF controlled by PWRREQ */
					op_mode = <1>;
				};
				s5m_ldo17_reg: LDO17 {
					regulator-name = "P2.8V_LDO_OUT17";
					regulator-min-microvolt = <2800000>;
					regulator-max-microvolt = <2800000>;
					regulator-always-on;
					/* Output OFF */
					op_mode = <0>;
				};
				s5m_ldo25_reg: LDO25 {
					regulator-name = "vdd_bridge";
					regulator-min-microvolt = <1200000>;
					regulator-max-microvolt = <1200000>;
					/* Output ON */
					op_mode = <3>;
				};
				s5m_buck1_reg: BUCK1 {
					regulator-name = "vdd_mif";
					regulator-min-microvolt = <950000>;
					regulator-max-microvolt = <1300000>;
					regulator-always-on;
					regulator-boot-on;
					/* Output ON/OFF controlled by PWRREQ */
					op_mode = <1>;
				};

				s5m_buck2_reg: BUCK2 {
					regulator-name = "vdd_arm";
					regulator-min-microvolt = <850000>;
					regulator-max-microvolt = <1350000>;
					regulator-always-on;
					regulator-boot-on;
					/* Output ON/OFF controlled by PWRREQ */
					op_mode = <1>;
				};

				s5m_buck3_reg: BUCK3 {
					regulator-name = "vdd_int";
					regulator-min-microvolt = <900000>;
					regulator-max-microvolt = <1200000>;
					regulator-always-on;
					regulator-boot-on;
					/* Output ON/OFF controlled by PWRREQ */
					op_mode = <1>;
				};

				s5m_buck4_reg: BUCK4 {
					regulator-name = "vdd_g3d";
					regulator-min-microvolt = <850000>;
					regulator-max-microvolt = <1300000>;
					regulator-boot-on;
					/* Output ON/OFF controlled by PWRREQ */
					op_mode = <1>;
				};

				s5m_buck5_reg: BUCK5 {
					regulator-name = "P1.8V_BUCK_OUT5";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
					regulator-always-on;
					regulator-boot-on;
					/* Output ON */
					op_mode = <3>;
				};

				s5m_buck6_reg: BUCK6 {
					regulator-name = "P1.2V_BUCK_OUT6";
					regulator-min-microvolt = <1200000>;
					regulator-max-microvolt = <1200000>;
					regulator-always-on;
					regulator-boot-on;
					/* Output OFF */
					op_mode = <0>;
				};

				s5m_buck9_reg: BUCK9 {
					regulator-name = "vdd_ummc";
					regulator-min-microvolt = <900000>;
					regulator-max-microvolt = <3000000>;
					regulator-always-on;
					regulator-boot-on;
					/* Output ON/OFF controlled by PWRREQ */
					op_mode = <1>;
				};

				s5m_en32khz_ap: EN32KHZ_AP {
					regulator-name = "en32khz_ap";
					regulator-always-on;
					regulator-boot-on;
					op_mode = <1>; /* Normal Mode */
				};

				s5m_en32khz_cp: EN32KHZ_CP {
					regulator-name = "en32khz_cp";
					regulator-always-on;
					regulator-boot-on;
					op_mode = <1>; /* Normal Mode */
				};

				s5m_en32khz_bt: EN32KHZ_BT {
					regulator-name = "en32khz_bt";
					regulator-always-on;
					regulator-boot-on;
					op_mode = <1>; /* Normal Mode */
				};
			};
		};
	};

	i2c@12C70000 {
		trackpad {
			reg = <0x4b>;
			compatible = "atmel,atmel_mxt_tp";
			interrupts = <2 0>;
			interrupt-parent = <&gpx1>;
			pinctrl-names = "default";
			pinctrl-0 = <&atmel_irq>;
			wakeup-source;
		};
		trackpad-bootloader {
			reg = <0x25>;
			compatible = "atmel,atmel_mxt_tp";
			interrupts = <2 0>;
			interrupt-parent = <&gpx1>;
			pinctrl-names = "default";
			pinctrl-0 = <&atmel_irq>;
			wakeup-source;
		};
	};

	i2c@12CA0000 {
		ec: cros-ec@1e {
			compatible = "google,cros-ec-i2c";
			reg = <0x1e>;
			interrupts = <6 0>;
			interrupt-parent = <&gpx1>;
			pinctrl-names = "default";
			pinctrl-0 = <&ec_irq>;
			wakeup-source;

			nv-storage {
				compatible = "google,cros-ec-vbc";
			};

			cros-ec-keyb {
				compatible = "google,cros-ec-keyb";
				keypad,num-rows = <8>;
				keypad,num-columns = <13>;
				google,needs-ghost-filter;

				/*
				 * Keymap entries take the form of 0xRRCCKKKK where
				 * RR=Row CC=Column KKKK=Key Code
				 * The values below are for a US keyboard layout and
				 * are taken from the Linux driver. Note that the
				 * 102ND key is not used for US keyboards.
				 */
				linux,keymap = <
					/* L_META  F1         B          F10     */
					0x0001007d 0x0002003b 0x00030030 0x00040044
					/* N       =          R_ALT      ESC     */
					0x00060031 0x0008000d 0x000a0064 0x01010001
					/* F4      G          F7         H       */
					0x0102003e 0x01030022 0x01040041 0x01060023
					/* '       F9         BKSPACE    L_CTRL  */
					0x01080028 0x01090043 0x010b000e 0x0200001d
					/* TAB     F3         T          F6      */
					0x0201000f 0x0202003d 0x02030014 0x02040040
					/* ]       Y          102ND      [       */
					0x0205001b 0x02060015 0x02070056 0x0208001a
					/* F8      GRAVE      F2         5       */
					0x02090042 0x03010029 0x0302003c 0x03030006
					/* F5      6          -          \       */
					0x0304003f 0x03060007 0x0308000c 0x030b002b
					/* R_CTRL  A          D          F       */
					0x04000061 0x0401001e 0x04020020 0x04030021
					/* S       K          J          ;       */
					0x0404001f 0x04050025 0x04060024 0x04080027
					/* L       ENTER      Z          C       */
					0x04090026 0x040b001c 0x0501002c 0x0502002e
					/* V       X          ,          M       */
					0x0503002f 0x0504002d 0x05050033 0x05060032
					/* L_SHIFT /          .          SPACE   */
					0x0507002a 0x05080035 0x05090034 0x050B0039
					/* 1       3          4          2       */
					0x06010002 0x06020004 0x06030005 0x06040003
					/* 8       7          0          9       */
					0x06050009 0x06060008 0x0608000b 0x0609000a
					/* L_ALT   DOWN       RIGHT      Q       */
					0x060a0038 0x060b006c 0x060c006a 0x07010010
					/* E       R          W          I       */
					0x07020012 0x07030013 0x07040011 0x07050017
					/* U       R_SHIFT    P          O       */
					0x07060016 0x07070036 0x07080019 0x07090018
					/* UP      LEFT    */
					0x070b0067 0x070c0069>;
			};

			power-regulator {
				compatible = "ti,cros-ec-tps65090";

				infet1-supply = <&vbat>;
				infet2-supply = <&vbat>;
				infet3-supply = <&vbat>;
				infet4-supply = <&vbat>;
				infet5-supply = <&vbat>;
				infet6-supply = <&vbat>;
				infet7-supply = <&vbat>;

				regulators {
					vfet1 {
						tps65090-control-reg = <0x0f>;
						regulator-name = "vcd_led";
						regulator-min-microvolt = <12000000>;
						regulator-max-microvolt = <12000000>;
					};
					vfet3 {
						tps65090-control-reg = <0x11>;
						regulator-name = "wwan_r";
						regulator-min-microvolt = <3300000>;
						regulator-max-microvolt = <3300000>;
						regulator-always-on;
					};
					vfet5 {
						tps65090-control-reg = <0x13>;
						regulator-name = "cam";
						regulator-min-microvolt = <3300000>;
						regulator-max-microvolt = <3300000>;
						regulator-always-on;
						regulator-suspend-mem-disabled;
					};
					vfet6 {
						tps65090-control-reg = <0x14>;
						regulator-name = "lcd_vdd";
						regulator-min-microvolt = <3300000>;
						regulator-max-microvolt = <3300000>;
					};
					vfet7 {
						tps65090-control-reg = <0x15>;
						regulator-name = "ts";
						regulator-min-microvolt = <5000000>;
						regulator-max-microvolt = <5000000>;
					};
				};

				charger {
					compatible = "ti,cros_ec-charger";
				};
			};

			/* Arbitrarily assign bus 20 since past exynos range */
			i2c_20: i2c-tunnel {
				compatible = "google,cros-ec-i2c-tunnel";
				#address-cells = <1>;
				#size-cells = <0>;

				google,remote-bus = <0>;
				google,limited-passthrough;
				battery: sbs-battery@b {
					compatible = "sbs,sbs-battery";
					reg = <0xb>;
					sbs,poll-retry-count = <1>;
				};
			};
		};
	};

	i2c@12CD0000 {
		light-sensor {
			status = "disabled";
		};
	};

	usb@12000000 {
		status = "okay";
	};

	usb@12110000 {
		status = "okay";
	};

	usb@12120000 {
		status = "okay";
	};

	fimd {
		samsung,fimd-vidout-rgb;
		samsung,fimd-inv-vclk;
		samsung,default-window = <0>;
		samsung,fimd-win-bpp = <32>;
		samsung,fimd-src-clk-rate = <70500000>;
		samsung,use-mie-dithering;
	};

	lcd_dp0: lcd_panel0 {
			lcd-htiming = <40 40 32 1366>;
			lcd-vtiming = <10 12 6 768>;
	};

	display-port-controller {
		samsung,dp-display = <&lcd_dp0>;
		samsung,dp-frame-rate = <60>;
		samsung,color-space = <0>;
		samsung,dynamic-range = <0>;
		samsung,ycbcr-coeff = <0>;
		samsung,color-depth = <1>;
		samsung,link-rate = <0x0a>;
		samsung,lane-count = <1>;
		samsung,hpd-gpio = <&gpc3 0 0>;
		pinctrl-names = "default";
		pinctrl-0 = <&dp_hpd>;
	};

	hdmi {
		vdd-supply = <&ldo8_reg>;
		vdd_osc-supply = <&ldo10_reg>;
		vdd_pll-supply = <&ldo8_reg>;
	};

	sound {
		compatible = "google,daisy-audio-max98089";
		samsung,audio-codec = <&max98089>;
		/* pins and clocks are defined in cros5250-common.dtsi */
	};

	i2c@12C90000 {
		samsung,i2c-sda-delay = <100>;
		samsung,i2c-max-bus-freq = <400000>;

		tpm {
			compatible = "infineon,slb9645tt";
			reg = <0x20>;
			powered-while-suspended;
		};
	};

	i2c@12CD0000 {
		ps8622-bridge@20 {
			compatible = "parade,ps8622";
			reg = <0x08>;
			sleep-gpio = <&gpc3 6 0>;
			reset-gpio = <&gpc3 1 0>;
			lane-count = <1>;
			pinctrl-names = "default";
			pinctrl-0 = <&ps8622_gpios>;

			/*
			 * The following table maps the timings set forth in the
			 * LCD's datasheet to the timings specified in the
			 * PS8622 datasheet.
			 * ----------+---------------------------+--------------
			 * LCD TIME  | TRANSITION                | PS8622 EQUIV
			 * ----------+---------------------------+--------------
			 * t2 <= 50  | LCD_VCC -> VIDEO_SIGNAL	 | T3+4+5+6+7+8
			 * 200 <= t5 | VIDEO_SIGNAL -> LED_EN	 | T9 + T10
			 * 0 <= t9   | LCD_BL_PWM -> LED_EN	 | T10
			 * 10 <= t8  | VLED -> LCD_BL_PWM	 | --
			 * 200 <= t6 | !LED_EN -> !VIDEO_SIGNAL  | T11 + T12
			 * t3 <= 50  | !VIDEO_SIGNAL -> !LCD_VCC | T13
			 * 400 <= t4 | !LCD_VCC -> LCD_VCC	 | T15
			 * 0 <= t10  | !LED_EN -> !LCD_BL_PWM    | T11
			 * 10 <= t11 | !LCD_BL_PWM -> !VLED      | --
			 * ----------+---------------------------+--------------
			 */
			power-seq-timing = <10 200 10 5 200 10 600>;
		};

		max98089: codec@10 {
			compatible = "maxim,max98089", "maxim,max98088";
			reg = <0x10>;
			mic-left-digital;
			mic-right-digital;
		};

		temp-sensor@4c {
			compatible = "gmt,g781";
			reg = <0x4c>;
		};

		anx7808-bridge@38 {
			compatible = "analogix,anx7808";
			reg = <0x38>;
			pd-gpio = <&gpe0 6 1>;
			reset-gpio = <&gpe0 7 1>;
			cable-det-gpio = <&gpx0 7 0>;
			intp-gpio = <&gpf0 0 0>;
			pinctrl-names = "default";
			pinctrl-0 = <&anx7808_gpios &anx7808_irq0 &anx7808_irq1>;
		};
	};

	fixed-rate-clocks {
		xxti {
			compatible = "samsung,clock-xxti";
			clock-frequency = <24000000>;
		};
	};

	pinctrl@11400000 {
		gpa0: gpa0 {
			powerdown-settings = <6 6 6 6 3 3 2 2>;
		};
		gpa1: gpa1 {
			powerdown-settings = <3 3 2 2 3 3>;
		};
		gpa2: gpa2 {
			powerdown-settings = <2 2 2 2 3 2 2 2>;
		};
		gpb0: gpb0 {
			powerdown-settings = <3 3 3 3 3>;
		};
		gpb1: gpb1 {
			powerdown-settings = <3 3 3 3 3>;
		};
		gpb2: gpb2 {
			powerdown-settings = <3 3 2 2>;
		};
		gpb3: gpb3 {
			powerdown-settings = <2 2 2 2>;
		};
		gpc0: gpc0 {
			powerdown-settings = <6 2 2 2 2 2 2>;
		};
		gpc1: gpc1 {
			powerdown-settings = <2 2 2 2>;
		};
		gpc2: gpc2 {
			powerdown-settings = <3 1 3 3 3 3 3>;
		};
		gpc3: gpc3 {
			powerdown-settings = <6 2 1 2 2 2 3>;
		};
		gpc4: gpc4 {
			powerdown-settings = <6 2 3 2 2 2 2>;
		};
		gpd0: gpd0 {
			powerdown-settings = <6 6 3 3>;
		};
		gpd1: gpd1 {
			powerdown-settings = <6 6 6 3 3 6 1 1>;
		};
		gpy0: gpy0 {
			powerdown-settings = <3 3 6 3 3 3>;
		};
		gpy1: gpy1 {
			powerdown-settings = <5 3 3 3>;
		};
		gpy2: gpy2 {
			powerdown-settings = <3 3 3 3 3 2>;
		};
		gpy3: gpy3 {
			powerdown-settings = <3 3 3 3 3 3 3 3>;
		};
		gpy4: gpy4 {
			powerdown-settings = <3 3 3 3 3 3 3 3>;
		};
		gpy5: gpy5 {
			powerdown-settings = <3 3 3 3 3 3 3 3>;
		};
		gpy6: gpy6 {
			powerdown-settings = <3 3 3 3 3 3 3 3>;
		};
	};
	pinctrl@13400000 {
		gpe0: gpe0 {
			powerdown-settings = <5 3 3 3 2 2 3 3>;
		};
		gpe1: gpe1 {
			powerdown-settings = <5 3>;
		};
		gpf0: gpf0 {
			powerdown-settings = <3 3 1 2>;
		};
		gpf1: gpf1 {
			powerdown-settings = <3 3 3 3>;
		};
		gpg0: gpg0 {
			powerdown-settings = <3 3 3 3 3 3 3 3>;
		};
		gpg1: gpg1 {
			powerdown-settings = <3 3 3 3 3 3 3 3>;
		};
		gpg2: gpg2 {
			powerdown-settings = <3 3>;
		};
		gph0: gph0 {
			powerdown-settings = <3 3 3 3>;
		};
		gph1: gph1 {
			powerdown-settings = <3 3 3 3 3 3 3 3>;
		};
	};
	pinctrl@10d10000 {
		gpv0: gpv0 {
			powerdown-settings = <3 3 3 3 3 3 3 3>;
		};
		gpv1: gpv1 {
			powerdown-settings = <3 3 3 3 3 3 3 3>;
		};
		gpv2: gpv2 {
			powerdown-settings = <3 3 3 3 3 3 3 3>;
		};
		gpv3: gpv3 {
			powerdown-settings = <3 3 3 3 3 3 3 3>;
		};
		gpv4: gpv4 {
			powerdown-settings = <3 3>;
		};
	};
	pinctrl@03860000 {
		gpz: gpz {
			powerdown-settings = <6 3 6 6 6 3 3>;
		};
	};

};
